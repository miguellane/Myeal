/*
 * spoonacular API
 *
 * The spoonacular Nutrition, Recipe, and Food API allows you to access over 380,000 recipes, thousands of ingredients, 800,000 food products, and 100,000 menu items. Our food ontology and semantic recipe search engine makes it possible to search for recipes using natural language queries, such as \"gluten free brownies without sugar\" or \"low fat vegan cupcakes.\" You can automatically calculate the nutritional information for any recipe, analyze recipe costs, visualize ingredient lists, find recipes for what's in your fridge, find recipes based on special diets, nutritional requirements, or favorite ingredients, classify recipes into types and cuisines, convert ingredient amounts, or even compute an entire meal plan. With our powerful API, you can create many kinds of food and especially nutrition apps.  Special diets/dietary requirements currently available include: vegan, vegetarian, pescetarian, gluten free, grain free, dairy free, high protein, whole 30, low sodium, low carb, Paleo, ketogenic, FODMAP, and Primal.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: mail@spoonacular.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Spoonacular.Api;
using Spoonacular.Model;
using Spoonacular.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Spoonacular.Test.Model
{
    /// <summary>
    ///  Class for testing InlineResponse2006Recipes
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class InlineResponse2006RecipesTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for InlineResponse2006Recipes
        //private InlineResponse2006Recipes instance;

        public InlineResponse2006RecipesTests()
        {
            // TODO uncomment below to create an instance of InlineResponse2006Recipes
            //instance = new InlineResponse2006Recipes();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of InlineResponse2006Recipes
        /// </summary>
        [Fact]
        public void InlineResponse2006RecipesInstanceTest()
        {
            // TODO uncomment below to test "IsType" InlineResponse2006Recipes
            //Assert.IsType<InlineResponse2006Recipes>(instance);
        }


        /// <summary>
        /// Test the property 'Id'
        /// </summary>
        [Fact]
        public void IdTest()
        {
            // TODO unit test for the property 'Id'
        }
        /// <summary>
        /// Test the property 'Title'
        /// </summary>
        [Fact]
        public void TitleTest()
        {
            // TODO unit test for the property 'Title'
        }
        /// <summary>
        /// Test the property 'Image'
        /// </summary>
        [Fact]
        public void ImageTest()
        {
            // TODO unit test for the property 'Image'
        }
        /// <summary>
        /// Test the property 'ImageType'
        /// </summary>
        [Fact]
        public void ImageTypeTest()
        {
            // TODO unit test for the property 'ImageType'
        }
        /// <summary>
        /// Test the property 'Servings'
        /// </summary>
        [Fact]
        public void ServingsTest()
        {
            // TODO unit test for the property 'Servings'
        }
        /// <summary>
        /// Test the property 'ReadyInMinutes'
        /// </summary>
        [Fact]
        public void ReadyInMinutesTest()
        {
            // TODO unit test for the property 'ReadyInMinutes'
        }
        /// <summary>
        /// Test the property 'License'
        /// </summary>
        [Fact]
        public void LicenseTest()
        {
            // TODO unit test for the property 'License'
        }
        /// <summary>
        /// Test the property 'SourceName'
        /// </summary>
        [Fact]
        public void SourceNameTest()
        {
            // TODO unit test for the property 'SourceName'
        }
        /// <summary>
        /// Test the property 'SourceUrl'
        /// </summary>
        [Fact]
        public void SourceUrlTest()
        {
            // TODO unit test for the property 'SourceUrl'
        }
        /// <summary>
        /// Test the property 'SpoonacularSourceUrl'
        /// </summary>
        [Fact]
        public void SpoonacularSourceUrlTest()
        {
            // TODO unit test for the property 'SpoonacularSourceUrl'
        }
        /// <summary>
        /// Test the property 'AggregateLikes'
        /// </summary>
        [Fact]
        public void AggregateLikesTest()
        {
            // TODO unit test for the property 'AggregateLikes'
        }
        /// <summary>
        /// Test the property 'HealthScore'
        /// </summary>
        [Fact]
        public void HealthScoreTest()
        {
            // TODO unit test for the property 'HealthScore'
        }
        /// <summary>
        /// Test the property 'SpoonacularScore'
        /// </summary>
        [Fact]
        public void SpoonacularScoreTest()
        {
            // TODO unit test for the property 'SpoonacularScore'
        }
        /// <summary>
        /// Test the property 'PricePerServing'
        /// </summary>
        [Fact]
        public void PricePerServingTest()
        {
            // TODO unit test for the property 'PricePerServing'
        }
        /// <summary>
        /// Test the property 'AnalyzedInstructions'
        /// </summary>
        [Fact]
        public void AnalyzedInstructionsTest()
        {
            // TODO unit test for the property 'AnalyzedInstructions'
        }
        /// <summary>
        /// Test the property 'Cheap'
        /// </summary>
        [Fact]
        public void CheapTest()
        {
            // TODO unit test for the property 'Cheap'
        }
        /// <summary>
        /// Test the property 'CreditsText'
        /// </summary>
        [Fact]
        public void CreditsTextTest()
        {
            // TODO unit test for the property 'CreditsText'
        }
        /// <summary>
        /// Test the property 'Cuisines'
        /// </summary>
        [Fact]
        public void CuisinesTest()
        {
            // TODO unit test for the property 'Cuisines'
        }
        /// <summary>
        /// Test the property 'DairyFree'
        /// </summary>
        [Fact]
        public void DairyFreeTest()
        {
            // TODO unit test for the property 'DairyFree'
        }
        /// <summary>
        /// Test the property 'Diets'
        /// </summary>
        [Fact]
        public void DietsTest()
        {
            // TODO unit test for the property 'Diets'
        }
        /// <summary>
        /// Test the property 'Gaps'
        /// </summary>
        [Fact]
        public void GapsTest()
        {
            // TODO unit test for the property 'Gaps'
        }
        /// <summary>
        /// Test the property 'GlutenFree'
        /// </summary>
        [Fact]
        public void GlutenFreeTest()
        {
            // TODO unit test for the property 'GlutenFree'
        }
        /// <summary>
        /// Test the property 'Instructions'
        /// </summary>
        [Fact]
        public void InstructionsTest()
        {
            // TODO unit test for the property 'Instructions'
        }
        /// <summary>
        /// Test the property 'Ketogenic'
        /// </summary>
        [Fact]
        public void KetogenicTest()
        {
            // TODO unit test for the property 'Ketogenic'
        }
        /// <summary>
        /// Test the property 'LowFodmap'
        /// </summary>
        [Fact]
        public void LowFodmapTest()
        {
            // TODO unit test for the property 'LowFodmap'
        }
        /// <summary>
        /// Test the property 'Occasions'
        /// </summary>
        [Fact]
        public void OccasionsTest()
        {
            // TODO unit test for the property 'Occasions'
        }
        /// <summary>
        /// Test the property 'Sustainable'
        /// </summary>
        [Fact]
        public void SustainableTest()
        {
            // TODO unit test for the property 'Sustainable'
        }
        /// <summary>
        /// Test the property 'Vegan'
        /// </summary>
        [Fact]
        public void VeganTest()
        {
            // TODO unit test for the property 'Vegan'
        }
        /// <summary>
        /// Test the property 'Vegetarian'
        /// </summary>
        [Fact]
        public void VegetarianTest()
        {
            // TODO unit test for the property 'Vegetarian'
        }
        /// <summary>
        /// Test the property 'VeryHealthy'
        /// </summary>
        [Fact]
        public void VeryHealthyTest()
        {
            // TODO unit test for the property 'VeryHealthy'
        }
        /// <summary>
        /// Test the property 'VeryPopular'
        /// </summary>
        [Fact]
        public void VeryPopularTest()
        {
            // TODO unit test for the property 'VeryPopular'
        }
        /// <summary>
        /// Test the property 'Whole30'
        /// </summary>
        [Fact]
        public void Whole30Test()
        {
            // TODO unit test for the property 'Whole30'
        }
        /// <summary>
        /// Test the property 'WeightWatcherSmartPoints'
        /// </summary>
        [Fact]
        public void WeightWatcherSmartPointsTest()
        {
            // TODO unit test for the property 'WeightWatcherSmartPoints'
        }
        /// <summary>
        /// Test the property 'DishTypes'
        /// </summary>
        [Fact]
        public void DishTypesTest()
        {
            // TODO unit test for the property 'DishTypes'
        }
        /// <summary>
        /// Test the property 'ExtendedIngredients'
        /// </summary>
        [Fact]
        public void ExtendedIngredientsTest()
        {
            // TODO unit test for the property 'ExtendedIngredients'
        }
        /// <summary>
        /// Test the property 'Summary'
        /// </summary>
        [Fact]
        public void SummaryTest()
        {
            // TODO unit test for the property 'Summary'
        }
        /// <summary>
        /// Test the property 'WinePairing'
        /// </summary>
        [Fact]
        public void WinePairingTest()
        {
            // TODO unit test for the property 'WinePairing'
        }

    }

}
